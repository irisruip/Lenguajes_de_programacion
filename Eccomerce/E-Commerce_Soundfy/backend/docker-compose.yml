version: '3.8'

services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ../frontend/src:/app/src # Monta el directorio src local al contenedor
      - /app/node_modules # Evita sobrescribir los node_modules en el contenedor
      - ../frontend:/app
    networks:
      - ecommerce-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - postgres
    networks:
      - ecommerce-network
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - postgres
    networks:
      - ecommerce-network
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - postgres
    networks:
      - ecommerce-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - postgres
    networks:
      - ecommerce-network

  shopping-cart-service:
    build:
      context: ./shopping-cart-service
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - postgres
    networks:
      - ecommerce-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - ecommerce-network

  postgres:
    image: postgres:13
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: clavemuysegura
      POSTGRES_DB: ecommerce
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  nginx:
    image: reverse-proxy
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - product-service
      - order-service
      - payment-service
      - shopping-cart-service
      - user-service
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres-data:
